/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    id 'java'
    id 'maven-publish'
    id 'org.springframework.boot' version '2.2.0.RELEASE'
    id 'jacoco'
    id 'checkstyle'
    id "io.freefair.lombok" version "4.1.5"
}

apply plugin: 'io.spring.dependency-management'

repositories {
    mavenLocal()
    maven {
        url = 'http://repo.maven.apache.org/maven2'
    }
    maven {
        url = System.getenv("NEXUS_URL")
        credentials {
            username = System.getenv("NEXUS_USER")
            password = System.getenv("NEXUS_PASS")
        }
    }
}

group = 'com.axitera'
version = '0.1'
description = 'r2gapi'
sourceCompatibility = '1.8'

sourceSets {
    integrationTest {
        java {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir file('src/integrationtest/java')
        }
        resources.srcDir file('src/integrationtest/resources')
    }
}

configurations {
    integrationTestImplementation.extendsFrom testImplementation
    integrationTestRuntime.extendsFrom testRuntime
}

ext {
    springDocVersion = '1.1.45'
    h2Version = '1.4.199'
    hamcrestVersion = '2.1'
    httpClientVersion = '4.5.10'
    mockitoVersion = '3.0.0'
    lombokVersion = '1.18.10'
    r2gLegacyVersion = '1.0-SNAPSHOT'
}

bootJar {
    archiveFileName = 'r2gapi.jar'
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-configuration-processor'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.data:spring-data-elasticsearch'
    implementation "org.springdoc:springdoc-openapi-ui:${springDocVersion}"
    
    implementation "com.h2database:h2:${h2Version}"

    implementation "com.ride2go.legacy:repository:${r2gLegacyVersion}"

    compileOnly "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'

    testImplementation "org.hamcrest:hamcrest:${hamcrestVersion}"
    testImplementation "org.apache.httpcomponents:httpclient:${httpClientVersion}"
    testImplementation "org.mockito:mockito-core:${mockitoVersion}"
}

test {
    useJUnitPlatform()
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from(sourceSets.main.allJava)
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from(javadoc.destinationDir)
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

task integrationTest(type: Test) {
    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath
}

check.dependsOn integrationTest
integrationTest.mustRunAfter test

checkstyle {
    toolVersion '7.6.1'
}

publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
            artifact(sourcesJar)
            artifact(javadocJar)
        }
    }
}

wrapper {
    gradleVersion = '5.6.1'
}
